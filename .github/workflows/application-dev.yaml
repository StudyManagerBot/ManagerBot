name: Deploy-prod-server
on:
  push:
    branches:
      - "feat/actions"
    paths:
      - "application/**"
      - "domain/**"
      - "infrastructure/**"
      - "*.gradle.kts"
      - ".github/workflows/**"

#  pull_request:
#    types:
#      - closed
#    branches:
#      - "develop"
#    paths:
#      - "application/**"
#      - "domain/**"
#      - "infrastructure/**"
#      - "*.gradle.kts"

permissions:
  contents: read

env:
  DOCKER_TAG: ${{ github.sha }}

jobs:
  build:
#    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            application:
              - 'application/**'
            domain:
              - 'domain/**'
            infrastructure:
              - 'infrastructure/**'
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test all
        run: ./gradlew clean :application:test domain:test infrastructure:test

      - name: Compile
        run: ./gradlew clean :application:build -x test

      - name: Emulator install
        uses: docker/setup-qemu-action@v3

      - name: Setup buildx for Arm64
        uses: docker/setup-buildx-action@v3

      - name: Harbor registry login
        uses: docker/login-action@v3
        with:
          registry: harbor.registry.notypie.dev
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Push build image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64
          context: ./application
          push: true
          tags: |
            harbor.registry.notypie.dev/bot/discord-study-manager:${{ env.DOCKER_TAG }}
  

  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Install Kubectl for OKE
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}

      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    steps:
      - name: Configure Kubectl
        uses: oracle-actions/configure-kubectl-oke@v1.5.0
        id: test-configure-kubectl-oke-action
        with:
          cluster: ${{ secrets.OKE_CLUSTER_OCID }}

      - name: Run Kubectl
        run: kubectl get nodes -A

